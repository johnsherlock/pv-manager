// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Account Governer Stack matches snapshot 1`] = `
{
  "Outputs": {
    "PVManagerAPIEndpointA234314A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "PVManagerAPIE361311E",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "PVManagerAPIDeploymentStageprodAE89A697",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AggregateHistoricalDataF321A747": {
      "DependsOn": [
        "AggregateHistoricalDataServiceRoleDefaultPolicyB7EC2994",
        "AggregateHistoricalDataServiceRoleB156C6BB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "47576e64a7ba50915aec683433c42b5faada869728e5675651381ab06311a7f0.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "AggregateHistoricalData",
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "AggregateHistoricalDataServiceRoleB156C6BB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AggregateHistoricalDataServiceRoleB156C6BB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AggregateHistoricalDataServiceRoleDefaultPolicyB7EC2994": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EddiDataDDA929CE",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AggregateHistoricalDataServiceRoleDefaultPolicyB7EC2994",
        "Roles": [
          {
            "Ref": "AggregateHistoricalDataServiceRoleB156C6BB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BootstrapHistoricalDataB266B403": {
      "DependsOn": [
        "BootstrapHistoricalDataServiceRoleDefaultPolicy4FEB38FA",
        "BootstrapHistoricalDataServiceRole6AB6AFBE",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "320814873aeebb849abe1b4a4399447e5c9a9647556187bbf8168cf77f193dac.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "BootstrapHistoricalData",
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "BootstrapHistoricalDataServiceRole6AB6AFBE",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BootstrapHistoricalDataServiceRole6AB6AFBE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BootstrapHistoricalDataServiceRoleDefaultPolicy4FEB38FA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MyEnergiDailyBackup8D2483FF",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "MyEnergiDailyBackup8D2483FF",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BootstrapHistoricalDataServiceRoleDefaultPolicy4FEB38FA",
        "Roles": [
          {
            "Ref": "BootstrapHistoricalDataServiceRole6AB6AFBE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "EddiBackupD0A72236",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EddiBackupAutoDeleteObjectsCustomResource1DF87193": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "EddiBackupPolicyEDE50A75",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "EddiBackupD0A72236",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "EddiBackupD0A72236": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "historical-eddi-data",
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "EddiBackupPolicyEDE50A75": {
      "Properties": {
        "Bucket": {
          "Ref": "EddiBackupD0A72236",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EddiBackupD0A72236",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "EddiBackupD0A72236",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "EddiDataDDA929CE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "serialNumber",
            "AttributeType": "S",
          },
          {
            "AttributeName": "date",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "serialNumber",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "date",
            "KeyType": "RANGE",
          },
        ],
        "TableName": "eddi-data",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "MyEnergiDailyBackup8D2483FF": {
      "DependsOn": [
        "MyEnergiDailyBackupServiceRoleDefaultPolicyDD8B51D4",
        "MyEnergiDailyBackupServiceRoleDB8AA6CB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3a9b621d81fa919075404eca7087e65b897b1aaf86f276a0a5deb9716b982b21.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "EDDI_DATA_BUCKET_NAME": "historical-eddi-data",
            "EDDI_DATA_TABLE_NAME": "eddi-data",
            "MYENERGI_PASSWORD": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":secretsmanager:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":secret:pvm:SecretString:myenergi-password}}",
                ],
              ],
            },
            "MYENERGI_USERNAME": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":secretsmanager:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":secret:pvm:SecretString:myenergi-username}}",
                ],
              ],
            },
          },
        },
        "FunctionName": "MyEnergiDailyBackup",
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "MyEnergiDailyBackupServiceRoleDB8AA6CB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "MyEnergiDailyBackupServiceRoleDB8AA6CB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyEnergiDailyBackupServiceRoleDefaultPolicyDD8B51D4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EddiDataDDA929CE",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EddiBackupD0A72236",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "EddiBackupD0A72236",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MyEnergiDailyBackupServiceRoleDefaultPolicyDD8B51D4",
        "Roles": [
          {
            "Ref": "MyEnergiDailyBackupServiceRoleDB8AA6CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MyEnergiProxy08F35A31": {
      "DependsOn": [
        "MyEnergiProxyServiceRoleB74A05EA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "ea2709223a7cefc995e5cbbf5b28e38227c49b1df8449bc2271f405c55bee473.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "MYENERGI_PASSWORD": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":secretsmanager:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":secret:pvm:SecretString:myenergi-password}}",
                ],
              ],
            },
            "MYENERGI_USERNAME": {
              "Fn::Join": [
                "",
                [
                  "{{resolve:secretsmanager:arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":secretsmanager:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":secret:pvm:SecretString:myenergi-username}}",
                ],
              ],
            },
          },
        },
        "FunctionName": "MyEnergiProxy",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyEnergiProxyServiceRoleB74A05EA",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "MyEnergiProxyServiceRoleB74A05EA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "PVManagerAPIANY08095528": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseTemplates": {
                "application/json": "{"message": "PV Manager API"}",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{"statusCode": 404}",
          },
          "Type": "MOCK",
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "PVManagerAPIE361311E",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PVManagerAPIAccount2C0A94A4": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "PVManagerAPIE361311E",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "PVManagerAPICloudWatchRoleF9A2E993",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "PVManagerAPICloudWatchRoleF9A2E993": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "PVManagerAPIDeploymentD0845FF7dfb19d643c502b8f70a4a6979ccd5780": {
      "DependsOn": [
        "PVManagerAPIaggregatehistoricaldataGETA6B814F7",
        "PVManagerAPIaggregatehistoricaldataOPTIONS10D13348",
        "PVManagerAPIaggregatehistoricaldataAF1DE205",
        "PVManagerAPIANY08095528",
        "PVManagerAPIbackupeddidataGETB0926A37",
        "PVManagerAPIbackupeddidataOPTIONS865AE1F2",
        "PVManagerAPIbackupeddidataD73BF8DC",
        "PVManagerAPIbootstraphistoricaldataGET55ED9762",
        "PVManagerAPIbootstraphistoricaldataOPTIONS090325EB",
        "PVManagerAPIbootstraphistoricaldata526E911B",
        "PVManagerAPIminutedataGET8DF2B9D0",
        "PVManagerAPIminutedataOPTIONS19A596B0",
        "PVManagerAPIminutedataA5F4F992",
        "PVManagerAPIOPTIONS64C7D55E",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "PVManagerAPIDeploymentStageprodAE89A697": {
      "DependsOn": [
        "PVManagerAPIAccount2C0A94A4",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "PVManagerAPIDeploymentD0845FF7dfb19d643c502b8f70a4a6979ccd5780",
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "PVManagerAPIE361311E": {
      "Properties": {
        "Name": "PV Manager API",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "PVManagerAPIOPTIONS64C7D55E": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "PVManagerAPIE361311E",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PVManagerAPIaggregatehistoricaldataAF1DE205": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "PVManagerAPIE361311E",
            "RootResourceId",
          ],
        },
        "PathPart": "aggregate-historical-data",
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "PVManagerAPIaggregatehistoricaldataGETA6B814F7": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AggregateHistoricalDataF321A747",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "PVManagerAPIaggregatehistoricaldataAF1DE205",
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PVManagerAPIaggregatehistoricaldataGETApiPermissionMyTestStackPVManagerAPI5C242F05GETaggregatehistoricaldataAE068FA9": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AggregateHistoricalDataF321A747",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "PVManagerAPIE361311E",
              },
              "/",
              {
                "Ref": "PVManagerAPIDeploymentStageprodAE89A697",
              },
              "/GET/aggregate-historical-data",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PVManagerAPIaggregatehistoricaldataGETApiPermissionTestMyTestStackPVManagerAPI5C242F05GETaggregatehistoricaldataEEF3989B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AggregateHistoricalDataF321A747",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "PVManagerAPIE361311E",
              },
              "/test-invoke-stage/GET/aggregate-historical-data",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PVManagerAPIaggregatehistoricaldataOPTIONS10D13348": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "PVManagerAPIaggregatehistoricaldataAF1DE205",
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PVManagerAPIbackupeddidataD73BF8DC": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "PVManagerAPIE361311E",
            "RootResourceId",
          ],
        },
        "PathPart": "backup-eddi-data",
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "PVManagerAPIbackupeddidataGETApiPermissionMyTestStackPVManagerAPI5C242F05GETbackupeddidata9C4B6E2F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyEnergiDailyBackup8D2483FF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "PVManagerAPIE361311E",
              },
              "/",
              {
                "Ref": "PVManagerAPIDeploymentStageprodAE89A697",
              },
              "/GET/backup-eddi-data",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PVManagerAPIbackupeddidataGETApiPermissionTestMyTestStackPVManagerAPI5C242F05GETbackupeddidataF36F43A4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyEnergiDailyBackup8D2483FF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "PVManagerAPIE361311E",
              },
              "/test-invoke-stage/GET/backup-eddi-data",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PVManagerAPIbackupeddidataGETB0926A37": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "MyEnergiDailyBackup8D2483FF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "PVManagerAPIbackupeddidataD73BF8DC",
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PVManagerAPIbackupeddidataOPTIONS865AE1F2": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "PVManagerAPIbackupeddidataD73BF8DC",
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PVManagerAPIbootstraphistoricaldata526E911B": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "PVManagerAPIE361311E",
            "RootResourceId",
          ],
        },
        "PathPart": "bootstrap-historical-data",
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "PVManagerAPIbootstraphistoricaldataGET55ED9762": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BootstrapHistoricalDataB266B403",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "PVManagerAPIbootstraphistoricaldata526E911B",
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PVManagerAPIbootstraphistoricaldataGETApiPermissionMyTestStackPVManagerAPI5C242F05GETbootstraphistoricaldata1EEC9693": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BootstrapHistoricalDataB266B403",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "PVManagerAPIE361311E",
              },
              "/",
              {
                "Ref": "PVManagerAPIDeploymentStageprodAE89A697",
              },
              "/GET/bootstrap-historical-data",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PVManagerAPIbootstraphistoricaldataGETApiPermissionTestMyTestStackPVManagerAPI5C242F05GETbootstraphistoricaldata0C9090ED": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BootstrapHistoricalDataB266B403",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "PVManagerAPIE361311E",
              },
              "/test-invoke-stage/GET/bootstrap-historical-data",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PVManagerAPIbootstraphistoricaldataOPTIONS090325EB": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "PVManagerAPIbootstraphistoricaldata526E911B",
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PVManagerAPIminutedataA5F4F992": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "PVManagerAPIE361311E",
            "RootResourceId",
          ],
        },
        "PathPart": "minute-data",
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "PVManagerAPIminutedataGET8DF2B9D0": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "MyEnergiProxy08F35A31",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "PVManagerAPIminutedataA5F4F992",
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PVManagerAPIminutedataGETApiPermissionMyTestStackPVManagerAPI5C242F05GETminutedata6F3D9C7B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyEnergiProxy08F35A31",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "PVManagerAPIE361311E",
              },
              "/",
              {
                "Ref": "PVManagerAPIDeploymentStageprodAE89A697",
              },
              "/GET/minute-data",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PVManagerAPIminutedataGETApiPermissionTestMyTestStackPVManagerAPI5C242F05GETminutedata644C4AE5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyEnergiProxy08F35A31",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "PVManagerAPIE361311E",
              },
              "/test-invoke-stage/GET/minute-data",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PVManagerAPIminutedataOPTIONS19A596B0": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "PVManagerAPIminutedataA5F4F992",
        },
        "RestApiId": {
          "Ref": "PVManagerAPIE361311E",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ScheduleRuleAllowEventRuleMyTestStackMyEnergiDailyBackupD042BA03C511526A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyEnergiDailyBackup8D2483FF",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ScheduleRuleDA5BD877",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScheduleRuleDA5BD877": {
      "Properties": {
        "ScheduleExpression": "cron(1 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "MyEnergiDailyBackup8D2483FF",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "pvmanager7AB39DE7": {
      "Properties": {
        "BasicAuthConfig": {
          "EnableBasicAuth": false,
        },
        "BuildSpec": "version: "1.0"
frontend:
  phases:
    preBuild:
      commands:
        - npm ci
    build:
      commands:
        - npm run build
  artifacts:
    baseDirectory: build
    files:
      - "**/*"
  cache:
    paths:
      - node_modules/**/*
",
        "IAMServiceRole": {
          "Fn::GetAtt": [
            "pvmanagerRole57D61FC7",
            "Arn",
          ],
        },
        "Name": "pv-manager ",
        "OauthToken": "{{resolve:secretsmanager:pvm:SecretString:github-token::}}",
        "Repository": "https://github.com/johnsherlock/pv-manager",
      },
      "Type": "AWS::Amplify::App",
    },
    "pvmanagerRole57D61FC7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "amplify.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "pvmanagermain16482FDF": {
      "Properties": {
        "AppId": {
          "Fn::GetAtt": [
            "pvmanager7AB39DE7",
            "AppId",
          ],
        },
        "BranchName": "main",
        "EnableAutoBuild": true,
        "EnablePullRequestPreview": true,
      },
      "Type": "AWS::Amplify::Branch",
    },
    "pvmanagersolarstatscom3AA74827": {
      "Properties": {
        "AppId": {
          "Fn::GetAtt": [
            "pvmanager7AB39DE7",
            "AppId",
          ],
        },
        "AutoSubDomainCreationPatterns": [
          "*",
          "pr*",
        ],
        "AutoSubDomainIAMRole": {
          "Fn::GetAtt": [
            "pvmanagerRole57D61FC7",
            "Arn",
          ],
        },
        "DomainName": "solar-stats.com",
        "EnableAutoSubDomain": true,
        "SubDomainSettings": [
          {
            "BranchName": {
              "Fn::GetAtt": [
                "pvmanagermain16482FDF",
                "BranchName",
              ],
            },
            "Prefix": "",
          },
          {
            "BranchName": {
              "Fn::GetAtt": [
                "pvmanagermain16482FDF",
                "BranchName",
              ],
            },
            "Prefix": "www",
          },
        ],
      },
      "Type": "AWS::Amplify::Domain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
