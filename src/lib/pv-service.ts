import axios from 'axios';
import * as numUtils from './num-utils';

export interface DailyEnergyUsageProps {
  data: any;
}

/**
 * gep: Generated Positive -- the energy generated by the solar panels
 * gen: Generated Negative -- the excess energy generated by the solar panels
 * h1d: heater-1 diverted -- the energy diverted from the panels to the immersion
 * h1b: heater-1 boost -- the energy being sent to the immersion due to boost (could come from gird)
 * imp: Imported -- the energy imported from the grid
 * exp: Exported -- the energy exported to the grid
 * pectn:Positive Energy CT-n -- the energy being consumed by the house
 * nectn: Negative Energy CT-n -- the excess energy being generated by the solar panels (how is this different to `gen`)
 * v1:Supply Voltage (centi-volts) -- the volatage of electricity being fed back to the grid. Should be between 240-250
 * frq:Supply Frequency (centi-Hertz) -- the AC frequency of the elecricity being fed back to the grid. Should be between 49-51Hz
 * ctn:Current Transformer
 * hsk: Hestsink temperature
 */
export interface HourlyUsageData {
  'yr': number;
  'mon': number;
  'dom': number;
  'dow': 'Sun' | 'Mon' | 'Tues' | 'Wed' | 'Thurs' | 'Fri' | 'Sat';
  'hr': number;
  'min': number;
  'imp'?: number;
  'gep'?: number;
  'exp'?: number;
  'h1d'?: number;
  'h1b'?: number;
  'pect1'?: number;
  'pect2'?: number;
  'hsk?': number;
  'v1'?: number;
  'frq'?: number;
  'conp'?: number;
}

const calculateHourlyEnergyConsumptionKwh = (
  importedJoules: number = 0,
  generatedJoules: number = 0,
  immersionDivertedJoules: number = 0,
  exportedJoules: number = 0): number => {

  return importedJoules + generatedJoules - immersionDivertedJoules - exportedJoules;
};

export const getHourlyUsageDataForDate = async (formattedTargetDate: string): Promise<HourlyUsageData[]> => {
  console.log(`Retrieving data for ${formattedTargetDate}`);
  // const url = `http://192.168.68.143:3001/hour-data?date=${formattedTargetDate}`;
  const url = `http://localhost:3001/hour-data?date=${formattedTargetDate}`;
  try {
    const response = await axios.get(url);
    const data = await Promise.resolve(response.data.U21494842 as HourlyUsageData[]);
    return data.map((item: HourlyUsageData) => {
      return {
        ...item,
        conp: calculateHourlyEnergyConsumptionKwh(item.imp, item.gep, item.h1d, item.exp),
      };
    });
  } catch (error) {
    console.log('Error retrieving remote data', error);
    document.body.style.cursor = 'auto';
    return [];
  };
};